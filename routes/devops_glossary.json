

[
    {
        "Id": 1,
        "Term": "DevOps",
        "Description": "A software development approach that aims to integrate software development (Dev) and IT operations (Ops) to improve collaboration, automation, and efficiency in the software delivery process." ,
        "Reference": "'The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations' by Gene Kim, Patrick Debois, John Willis, and Jez Humble."
    },
    {
        "Id": 2,
        "Term": "Continuous Integration (CI)",
        "Description": "The practice of automatically integrating code changes into a shared repository multiple times a day. It involves running automated tests to detect and fix integration issues early.",
        "Reference": "'Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation' by Jez Humble and David Farley."
    },
    {
        "Id": 3,
        "Term": "Continuous Delivery (CD)",
        "Description": "Extends CI by automatically deploying code changes to production or staging environments once they pass the automated tests, making it ready for release at any time.",
        "Reference": "'Site Reliability Engineering: How Google Runs Production Systems' by Niall Richard Murphy, Betsy Beyer, Chris Jones, and Jennifer Petoff."
    },
    {
        "Id": 4,
        "Term": "Agile Software Development",
        "Description": "A software development methodology and philosophy, focused on user feedback, software quality, and the ability to respond quickly to changes and new product requirements.",
        "Reference": "https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752"
    },
    {
        "Id": 5,
        "Term": "Branching",
        "Description": "The duplication of an object under review in source control so that the same code can be modified by more than one developer in parallel.",
        "Reference": "https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752"
    },
    {
        "Id": 6,
        "Term": "Deployment",
        "Description": "A term that refers to the grouping of every activity that makes a program available for use and moving that program to the target environment.",
        "Reference": "https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752"
    },
    {
        "Id": 7,
        "Term": "Automation",
        "Description": "The technology by which a process or procedure is performed without manual intervention. In DevOps, automation allows for the creation of real-time reports, integrating various tools used by different stakeholders, and workflowsâ€”integrating technology to bring tools together from different domains and break down the silos.",
        "Reference": "https://www.globalknowledge.com/us-en/topics/devops/glossary-of-terms/"
    },
    {
        "Id": 8,
        "Term": "Iterations",
        "Description": "A single development cycle, typically measured as one week or two weeks.",
        "Reference": "https://www.globalknowledge.com/us-en/topics/devops/glossary-of-terms/"
    },
    {
        "Id": 9,
        "Term": "Continuous Deployment",
        "Description": "Continuous Deployment is a form of Continuous Delivery that is fully automated and deploys every version instantly.",
        "Reference": "https://octopus.com/devops/glossary/"
    },
    {
        "Id": 10,
        "Term": "Git",
        "Description": "Git is a software and method of source control used for distributed development. Git tracks file changes, mostly to track source code changes between developers.",
        "Reference": "https://octopus.com/devops/glossary/"
    },
    {
        "Id": 11,
        "Term": "Configuration Management",
        "Description": "The process of managing and maintaining the configuration of software and infrastructure components. It ensures consistency and enables automation in managing environments.",
        "Reference": "Red Hat"
    },
    {
        "Id": 12,
        "Term": "Continuous Monitoring",
        "Description": "The practice of constantly observing and collecting data from applications and infrastructure to identify issues and improve performance",
        "Reference": "Data Dog"
    },
    {
        "Id": 13,
        "Term": "Microservices",
        "Description": "An architectural approach where an application is divided into small, loosely coupled services that can be independently developed, deployed, and scaled",
        "Reference": "MArtin Fowler"
    },
    {
        "Id": 14,
        "Term": "DevSecOps",
        "Description": "An extension of DevOps that integrates security practices throughout the software development lifecycle to ensure secure and compliant software delivery.",
        "Reference": "DevSecOps"
    },
    {
        "Id": 15,
        "Term": "Test-Driven Development",
        "Description": "It is a software development practice that follows a specific iterative approach to writing code. The main idea behind TDD is to write tests for a specific piece of functionality before actually implementing that functionality in code.",
        "Reference": "TDD"
    },
    {
        "Id": 16,
        "Term": "Behavior-Driven Development",
        "Description": "It is a software development methodology that extends the principles of Test-Driven Development (TDD) by focusing on the behavior of the software from the perspective of its stakeholders",
        "Reference": "Wikipidea"
    },
    {
        "Id": 17,
        "Term": "Staging",
        "Description": "It refers to an environment in the software development pipeline where a version of the application is deployed for testing and validation before it is released to production.",
        "Reference": "Red-gate"
    },
    {
        "Id": 18,
        "Term": "Automation",
        "Description": "Automation refers to the use of technology, tools, or scripts to perform tasks, processes, or workflows with minimal human intervention. In the context of software development and IT operations, automation plays a crucial role in streamlining repetitive, manual, and error-prone tasks, thereby improving efficiency, accuracy, and productivity.",
        "Reference": "Red Hat"
    },
    {
        "Id": 19,
        "Term": "Integration",
        "Description": "The process of combining different components, systems, or software applications to work together seamlessly as a unified whole. ",
        "Reference": "Red-gate"
    },
    {
        "Id": 20,
        "Term": "Continous Monitoring",
        "Description": "It refers to the practice of continuously monitoring the health, performance, and security of software applications and the underlying infrastructure throughout the entire software development lifecycle.",
        "Reference": "Wikipidea"
    },
    {
        "Id": 21,
        "Term": "Service",
        "Description": "A service in the context of microservices is a self-contained unit of functionality that can handle specific business tasks or operations. Each microservice typically represents a single business capability. ",
        "Reference": "Red-gate"
    },
    {
        "Id": 22,
        "Term": "Container",
        "Description": "Resource isolation at the OS (rather than machine) level, usually (in UNIX-based systems) in user space. Isolated elements vary by containerization strategy and often include file system, disk quota, CPU and memory, I/O rate, root privileges, and network access. Much lighter-weight than machine-level virtualization and sufficient for many isolation requirement sets. ",
        "Reference": "https://dzone.com/articles/microservices-zone-glossary"
    },
    {
        "Id": 23,
        "Term": "Orchestration",
        "Description": "The method to automate the management and deployment of your applications and containers.",
        "Reference": "https://dzone.com/articles/microservices-zone-glossary"
    },
    {
        "Id": 24,
        "Term": "Docker",
        "Description": "Docker is a popular containerization platform that allows you to create, deploy, and manage containers.",
        "Reference": "https://docs.docker.com/"
    },
    {
        "Id": 25,
        "Term": "Gateway",
        "Description": "A gateway is a service that acts as an entry point for external clients to interact with a set of microservices. It may handle routing, authentication, and load balancing.",
        "Reference": "Wikipidea"
    },
    {
        "Id": 26,
        "Term": "Scalability",
        "Description": "Scalability is the ability of a microservice architecture to handle increased load by adding or removing instances of services as needed. ",
        "Reference": "D-Zone"
    },
    {
        "Id": 27,
        "Term": "API",
        "Description": "An API is a set of rules and protocols that allows one software application to interact with another. Microservices often communicate with each other through APIs.",
        "Reference": "https://www.redhat.com/en/topics/api/what-are-application-programming-interfaces"
    },
    {
        "Id": 28,
        "Term": "Containerization",
        "Description": " Containerization is a technology that allows you to package an application and its dependencies into a standardized unit called a container. Containers are portable and can run consistently across different environments.",
        "Reference": "https://www.docker.com/resources/what-container/"
    },
    {
        "Id": 29,
        "Term": "Video Streaming",
        "Description": "Video streaming is the process of transmitting video data over the internet in real-time, allowing users to watch videos without downloading the entire file beforehand.",
        "Reference": "Red-gate"
    },
    {
        "Id": 30,
        "Term": "Streaming Service",
        "Description": "A streaming service is a platform that provides access to a library of videos for users to watch online, such as Netflix, YouTube, or Hulu.",
        "Reference": "D-Zone"
    },
    {
        "Id": 31,
        "Term": "Dockerfile",
        "Description": "A text file that contains instructions for building a Docker image.",
        "Reference": "https://docs.docker.com/engine/reference/builder/"
    },
    {
        "Id": 32,
        "Term": "Containerization",
        "Description": "The process of packaging and running applications and their dependencies in containers for consistent and isolated execution.",
        "Reference": "https://www.docker.com/resources/what-container/"
    },
    {
        "Id": 33,
        "Term": "Registry",
        "Description": "A repository for storing and distributing Docker images. Docker Hub is a popular public registry.",
        "Reference": "Docker Hub"
    },
    {
        "Id": 34,
        "Term": "Volume",
        "Description": "A Docker feature that allows data to persist outside the container. Volumes are used for data storage and sharing between containers.",
        "Reference": "D-Zone"
    },
    {
        "Id": 35,
        "Term": "Compose",
        "Description": "A tool for defining and running multi-container Docker applications using a YAML file.",
        "Reference": "https://docs.docker.com/compose/"
    },
    {
        "Id": 36,
        "Term": "Kubernetes (K8s)",
        "Description": "An open-source container orchestration platform for automating the deployment, scaling, and management of containerized applications.",
        "Reference": "https://kubernetes.io/"
    },
    {
        "Id": 37,
        "Term": "Container Orchestration",
        "Description": "The automated management of containers, including deployment, scaling, load balancing, and resource allocation.",
        "Reference": "D-Zone"
    },
    {
        "Id": 38,
        "Term": "CLI",
        "Description": "Command-Line Interface, which allows users to interact with Docker through commands in a terminal or shell",
        "Reference": "DevSecOps"
    },
    {
        "Id": 39,
        "Term": "Multi-stage Build:",
        "Description": "A technique in Dockerfile creation where multiple build stages are used to reduce the size of the final image.",
        "Reference": "D-Zone"
    },
    {
        "Id": 40,
        "Term": "Registry Authentication",
        "Description": "The process of securely authenticating with a container registry to pull or push images.",
        "Reference": "D-Zone"
    },
    {
        "Id": 41,
        "Term": "Regression test",
        "Description": "is re-running functional and non-functional tests to ensure that previously developed and tested software still performs as expected after a change",
        "Reference": "Wikipidea"
    },
    {
        "Id": 42,
        "Term": "Security test",
        "Description": "Security Testing is a type of Software Testing that uncovers vulnerabilities, threats, risks in a software application and prevents malicious attacks from intruders.",
        "Reference": "Guru99"
    },
    {
        "Id": 43,
        "Term": "FLUENTD",
        "Description": "Fluentd is an open-source data collection and log aggregation tool used for collecting, processing, and forwarding log and event data from various sources in a unified way",
        "Reference": "Red-gate"
    },
    {
        "Id": 44,
        "Term": "ELASTICSEARCH",
        "Description": "Elasticsearch is an open-source search engine written in Java.",
        "Reference": "D-Zone"
    },
    {
        "Id": 45,
        "Term": "KIBANA",
        "Description": "Kibana is the most interesting option of all this. Itâ€™s an open-source visualization dashboard built on top of Elasticsearch.",
        "Reference": "Unit site"
    },
    {
        "Id": 46,
        "Term": "PROMETHEUS",
        "Description": "Prometheus is an open-source monitoring system and time series database. Alongside Kubernetes, Prometheus is a graduated project of the Cloud Native Computing Foundation (CNCF), which puts it with some very esteemed company.",
        "Reference": "Data Dog"
    },
    {
        "Id": 47,
        "Term": "GRAFANA ",
        "Description": "Whilst Prometheus is great for data collection, queries, and alerts, itâ€™s not so good at visualization. We can create simple graphs with Prometheus, but itâ€™s quite limited.",
        "Reference": "Unit site"
    },
    {
        "Id": 48,
        "Term": "Multi-stage Build:",
        "Description": "A technique in Dockerfile creation where multiple build stages are used to reduce the size of the final image.",
        "Reference": "D-Zone"
    },
    {
        "Id": 49,
        "Term": "Docker log Driver",
        "Description": "The log driver determines how Docker containers' logs are handled and where they are stored. ",
        "Reference": "D-Zone"
    },
    {
        "Id": 50,
        "Term": "Metadata",
        "Description": "Metadata refers to data that provides information about other data. It describes various aspects of data, such as its content, structure, context, and characteristics. ",
        "Reference": "Red-gate"
    }
    
]


