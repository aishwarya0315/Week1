

[
    {
        "Id": 1,
        "Term": "DevOps",
        "Description": "A software development approach that aims to integrate software development (Dev) and IT operations (Ops) to improve collaboration, automation, and efficiency in the software delivery process." ,
        "Reference": "'The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations' by Gene Kim, Patrick Debois, John Willis, and Jez Humble."
    },
    {
        "Id": 2,
        "Term": "Continuous Integration (CI)",
        "Description": "The practice of automatically integrating code changes into a shared repository multiple times a day. It involves running automated tests to detect and fix integration issues early.",
        "Reference": "'Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation' by Jez Humble and David Farley."
    },
    {
        "Id": 3,
        "Term": "Continuous Delivery (CD)",
        "Description": "Extends CI by automatically deploying code changes to production or staging environments once they pass the automated tests, making it ready for release at any time.",
        "Reference": "'Site Reliability Engineering: How Google Runs Production Systems' by Niall Richard Murphy, Betsy Beyer, Chris Jones, and Jennifer Petoff."
    },
    {
        "Id": 4,
        "Term": "Agile Software Development",
        "Description": "A software development methodology and philosophy, focused on user feedback, software quality, and the ability to respond quickly to changes and new product requirements.",
        "Reference": "https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752"
    },
    {
        "Id": 5,
        "Term": "Branching",
        "Description": "The duplication of an object under review in source control so that the same code can be modified by more than one developer in parallel.",
        "Reference": "https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752"
    },
    {
        "Id": 6,
        "Term": "Deployment",
        "Description": "A term that refers to the grouping of every activity that makes a program available for use and moving that program to the target environment.",
        "Reference": "https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752"
    },
    {
        "Id": 7,
        "Term": "Automation",
        "Description": "The technology by which a process or procedure is performed without manual intervention. In DevOps, automation allows for the creation of real-time reports, integrating various tools used by different stakeholders, and workflowsâ€”integrating technology to bring tools together from different domains and break down the silos.",
        "Reference": "https://www.globalknowledge.com/us-en/topics/devops/glossary-of-terms/"
    },
    {
        "Id": 8,
        "Term": "Iterations",
        "Description": "A single development cycle, typically measured as one week or two weeks.",
        "Reference": "https://www.globalknowledge.com/us-en/topics/devops/glossary-of-terms/"
    },
    {
        "Id": 9,
        "Term": "Continuous Deployment",
        "Description": "Continuous Deployment is a form of Continuous Delivery that is fully automated and deploys every version instantly.",
        "Reference": "https://octopus.com/devops/glossary/"
    },
    {
        "Id": 10,
        "Term": "Git",
        "Description": "Git is a software and method of source control used for distributed development. Git tracks file changes, mostly to track source code changes between developers.",
        "Reference": "https://octopus.com/devops/glossary/"
    },
    {
        "Id": 11,
        "Term": "Configuration Management",
        "Description": "The process of managing and maintaining the configuration of software and infrastructure components. It ensures consistency and enables automation in managing environments.",
        "Reference": "Red Hat"
    },
    {
        "Id": 12,
        "Term": "Continuous Monitoring",
        "Description": "The practice of constantly observing and collecting data from applications and infrastructure to identify issues and improve performance",
        "Reference": "Data Dog"
    },
    {
        "Id": 13,
        "Term": "Microservices",
        "Description": "An architectural approach where an application is divided into small, loosely coupled services that can be independently developed, deployed, and scaled",
        "Reference": "MArtin Fowler"
    },
    {
        "Id": 14,
        "Term": "DevSecOps",
        "Description": "An extension of DevOps that integrates security practices throughout the software development lifecycle to ensure secure and compliant software delivery.",
        "Reference": "DevSecOps"
    },
    {
        "Id": 15,
        "Term": "Test-Driven Development",
        "Description": "It is a software development practice that follows a specific iterative approach to writing code. The main idea behind TDD is to write tests for a specific piece of functionality before actually implementing that functionality in code.",
        "Reference": "TDD"
    },
    {
        "Id": 16,
        "Term": "Behavior-Driven Development",
        "Description": "It is a software development methodology that extends the principles of Test-Driven Development (TDD) by focusing on the behavior of the software from the perspective of its stakeholders",
        "Reference": "Wikipidea"
    },
    {
        "Id": 17,
        "Term": "Staging",
        "Description": "It refers to an environment in the software development pipeline where a version of the application is deployed for testing and validation before it is released to production.",
        "Reference": "Red-gate"
    },
    {
        "Id": 18,
        "Term": "Automation",
        "Description": "Automation refers to the use of technology, tools, or scripts to perform tasks, processes, or workflows with minimal human intervention. In the context of software development and IT operations, automation plays a crucial role in streamlining repetitive, manual, and error-prone tasks, thereby improving efficiency, accuracy, and productivity.",
        "Reference": "Red Hat"
    },
    {
        "Id": 19,
        "Term": "Integration",
        "Description": "The process of combining different components, systems, or software applications to work together seamlessly as a unified whole. ",
        "Reference": "Red-gate"
    },
    {
        "Id": 20,
        "Term": "Continous Monitoring",
        "Description": "It refers to the practice of continuously monitoring the health, performance, and security of software applications and the underlying infrastructure throughout the entire software development lifecycle.",
        "Reference": "Wikipidea"
    }
    
]


